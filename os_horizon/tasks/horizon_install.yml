---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- include: install-apt.yml
  static: no
  when:
    - ansible_pkg_mgr == 'apt'

- name: Create developer mode constraint file
  copy:
    dest: "/opt/developer-pip-constraints.txt"
    content: |
      {% for item in horizon_developer_constraints %}
      {{ item }}
      {% endfor %}
  when:
    - horizon_developer_mode | bool

- name: Clone requirements git repository
  git:
    repo: "{{ horizon_requirements_git_repo }}"
    dest: "/opt/requirements"
    clone: yes
    update: yes
    version: "{{ horizon_requirements_git_install_branch }}"
  when:
    - horizon_developer_mode | bool

- name: Add constraints to pip_install_options fact for developer mode
  set_fact:
    pip_install_options_fact: "{{ pip_install_options|default('') }} --constraint /opt/developer-pip-constraints.txt --constraint /opt/requirements/upper-constraints.txt"
  when:
    - horizon_developer_mode | bool

- name: Set pip_install_options_fact when not in developer mode
  set_fact:
    pip_install_options_fact: "{{ pip_install_options|default('') }}"
  when:
    - not horizon_developer_mode | bool

- name: Install requires pip packages
  pip:
    name: "{{ horizon_requires_pip_packages | join(' ') }}"
    state: latest
    extra_args: "{{ pip_install_options_fact }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2

- name: Get local venv checksum
  stat:
    path: "/var/cache/{{ horizon_venv_download_url | basename }}"
    get_md5: False
  when:
    - not horizon_developer_mode | bool
  register: local_venv_stat

- name: Get remote venv checksum
  uri:
    url: "{{ horizon_venv_download_url | replace('tgz', 'checksum') }}"
    return_content: True
  when:
    - not horizon_developer_mode | bool
  register: remote_venv_checksum

# TODO: When project moves to ansible 2 we can pass this a sha256sum which will:
#       a) allow us to remove force: yes
#       b) allow the module to calculate the checksum of dest file which would
#          result in file being downloaded only if provided and dest sha256sum
#          checksums differ
- name: Attempt venv download
  get_url:
    url: "{{ horizon_venv_download_url }}"
    dest: "/var/cache/{{ horizon_venv_download_url | basename }}"
    force: yes
  ignore_errors: true
  register: get_venv
  when:
    - not horizon_developer_mode | bool
    - (local_venv_stat.stat.exists == False or
        {{ local_venv_stat.stat.checksum is defined and local_venv_stat.stat.checksum != remote_venv_checksum.content | trim }})

- name: Set horizon get_venv fact
  set_fact:
    horizon_get_venv: "{{ get_venv }}"

- name: Remove existing venv
  file:
    path: "{{ horizon_bin | dirname }}"
    state: absent
  when:
    - horizon_get_venv | changed

- name: Create horizon venv dir
  file:
    path: "{{ horizon_bin | dirname }}"
    state: directory
  register: horizon_venv_dir
  when:
    - not horizon_developer_mode | bool
    - horizon_get_venv | changed

- name: Unarchive pre-built venv
  unarchive:
    src: "/var/cache/{{ horizon_venv_download_url | basename }}"
    dest: "{{ horizon_bin | dirname }}"
    copy: "no"
  when:
    - not horizon_developer_mode | bool
    - horizon_get_venv | changed or horizon_venv_dir | changed
  notify: Restart apache2

- name: Install pip packages
  pip:
    name: "{{ horizon_pip_packages | join(' ') }}"
    state: latest
    virtualenv: "{{ horizon_bin | dirname }}"
    virtualenv_site_packages: "no"
    extra_args: "{{ pip_install_options_fact }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  when:
    - horizon_get_venv | failed or horizon_developer_mode | bool
  notify: Restart apache2

- name: Update virtualenv path
  command: >
    virtualenv-tools --update-path=auto {{ horizon_bin | dirname }}
  when:
    - not horizon_developer_mode | bool
    - horizon_get_venv | success

- name: Create horizon link for venv
  file:
    src: "{{ horizon_lib_dir | dirname }}/site-packages"
    dest: "{{ horizon_lib_dir }}"
    owner: "{{ horizon_system_user_name }}"
    group: "{{ horizon_system_group_name }}"
    state: "link"

- name: Create static horizon dir
  file:
    path: "{{ item.path }}"
    state: "directory"
    owner: "{{ item.owner|default(horizon_system_user_name) }}"
    group: "{{ item.group|default(horizon_system_group_name) }}"
  with_items:
    - { path: "{{ horizon_lib_dir }}/static", mode: "2755" }
    - { path: "{{ horizon_lib_dir }}/openstack_dashboard", mode: "2755" }
    - { path: "{{ horizon_lib_dir }}/openstack_dashboard/local", mode: "2755" }
    - { path: "{{ horizon_lib_dir }}/openstack_dashboard/local/enabled", mode: "2755" }
